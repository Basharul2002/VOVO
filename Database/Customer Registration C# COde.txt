using System;

class Program
{
    static void Main()
    {
        try
        {
           string[] names = {
                        "John", "Mary", "Michael", "Jennifer", "David", "Linda", "James", "Patricia", "Robert", "Elizabeth",
                        "William", "Susan", "Joseph", "Jessica", "Charles", "Sarah", "Thomas", "Karen", "Daniel", "Nancy",
                        "Matthew", "Lisa", "Anthony", "Betty", "Donald", "Dorothy", "Mark", "Sandra", "Paul", "Ashley",
                        "Steven", "Kimberly", "Andrew", "Donna", "Kenneth", "Emily", "George", "Carol", "Joshua", "Michelle",
                        "Kevin", "Amanda", "Brian", "Melissa", "Edward", "Deborah", "Ronald", "Stephanie", "Timothy", "Rebecca",
                        "Jason", "Laura", "Jeffrey", "Sharon", "Ryan", "Cynthia", "Gary", "Kathleen", "Nicholas", "Helen",
                        "Eric", "Amy", "Stephen", "Shirley", "Jacob", "Anna", "Larry", "Angela", "Frank", "Ruth",
                        "Scott", "Brenda", "Justin", "Pamela", "Brandon", "Nicole"
                    };
                    
            string startingDate = "2023-08-01";

            Random random = new Random();

            string date = startingDate;
            int j = 1256;
            for (int i = 1; i <= 50; i++, j++)
            {
                
                int yearLastDigits = 23;
                int monthPart = 2;
                int numberPart = j;
                 

                string ID = $"CUS-{yearLastDigits:D2}{numberPart:D10}-{monthPart:D2}";
                string name = names[i % 100];
                string email = $"{names[i % 80]}{j + 1}@gmail.com";
                string phoneNumber = $"{GenerateRandomNumber(random, 1000000000, 9999999999)}";
                string gender = $"{GenerateRandomNumber(random, 1, 4)}";;
                string time = "23:06:29.0000000";
                string password = i.ToString();

                Console.WriteLine($"('{ID}', null, '{name}', '{email}', '+880', '{phoneNumber}', '{gender}', '{password}', '{date}', '{time}'),");

                if (i % 30 == 5)
                {
                    date = UpdateDate(date, 1);
                }
                else if (i % 30 == 10)
                {
                    date = UpdateDate(date, 2);
                }
                else if (i % 30 == 15)
                {
                    date = UpdateDate(date, 2);
                }
                else if (i % 30== 20)
                {
                    date = UpdateDate(date, 1);
                }
                else if (i % 30 == 23)
                {
                    date = UpdateDate(date, 3);
                }
                else if (i % 30 == 28)
                {
                    date = UpdateDate(date, 2);
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    static string UpdateDate(string currentDate, int updateDay)
    {
        DateTime dt = DateTime.ParseExact(currentDate, "yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture);
        dt = dt.AddDays(updateDay);
        return dt.ToString("yyyy-MM-dd");
    }

    static long GenerateRandomNumber(Random random, long minValue, long maxValue)
    {
        byte[] buffer = new byte[8];
        random.NextBytes(buffer);
        long longRandom = BitConverter.ToInt64(buffer, 0);
        return (Math.Abs(longRandom % (maxValue - minValue)) + minValue);
    }
}
